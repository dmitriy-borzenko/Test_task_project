{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialog/dialog.component.ts","./src/app/dialog/dialog.component.html","./src/app/material.module.ts","./src/app/services/user.service.ts","./src/app/table/table.component.ts","./src/app/table/table.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'test-task';\n}\n","<app-table></app-table>","import { MaterialModule } from './material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { TableComponent } from './table/table.component';\nimport { FormsModule } from '@angular/forms';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableComponent,\n    DialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../table/table.component';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent  {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n  \n}\n","<h1 mat-dialog-title>Details</h1>\n<hr>\n<div mat-dialog-content class=\"dialog-content\">\n  <p>Total count: <span>{{data.totalCount}}</span></p>\n  <p>Active count: <span>{{data.countActive}}</span></p>\n</div>\n<div mat-dialog-actions class=\"button-close\">\n  <button mat-raised-button mat-dialog-close>Close</button>\n</div>","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    MatButtonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSortModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatSortModule\n  ]\n})\nexport class MaterialModule { }\n","import { User } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  baseURL: string = \"https://localhost:44337/api/users\";\n\n  getUsers() {\n    return this.http.get(this.baseURL);\n  }\n\n  putUsers(user: User) {\n    return this.http.put(`${this.baseURL}/${user.id}`, user)\n  }\n}\n","import { UserService } from './../services/user.service';\nimport { User } from './../models/user';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nexport interface DialogData {\n  totalCount: number;\n  countActive: number;\n}\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\n\nexport class TableComponent implements OnInit {\n\n  displayedColumns: string[] = ['id', 'name', 'active'];\n  dataSource: any = null;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dialog: MatDialog, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe((data: User[]) => {\n      this.dataSource = new MatTableDataSource<User>(data);\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  onChange(e) {\n    const id = e.source.id;\n    const newUser = this.dataSource.filteredData.filter(item => item.id === +id);\n    this.userService.putUsers(newUser[0]).subscribe(() => { });\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '450px',\n      data: {\n        totalCount: this.dataSource.filteredData.length,\n        countActive: this.dataSource.filteredData.filter(item => item.active === true).length\n      }\n    });\n  }\n}\n","<div class=\"container\">\n  <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\" >\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Id </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n    <!-- Active Column -->\n    <ng-container matColumnDef=\"active\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Active </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox id=\"{{element.id}}\" color=\"primary\" (change)=\"onChange($event)\" [(ngModel)]=\"element.active\">\n        </mat-checkbox>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [ngClass]=\"{'make-grey': row.active }\"></tr>\n  </table>\n\n  <button color=\"primary\" (click)=\"openDialog()\" class=\"button__total\" mat-raised-button>Total</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}